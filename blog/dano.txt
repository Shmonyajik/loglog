class Tjournal(models.Model):
    DataBase = models.CharField(max_length=256)
    LevelRecord = models.CharField(max_length=256, blank = True)
    DateRecord = models.DateTimeField(blank = True, null=True)
    Application = models.CharField(max_length=256, blank = True)
    Computer = models.TextField(max_length=256, blank = True)
    Event = models.TextField(max_length=256)
    Comment = models.TextField(max_length=256, blank = True)
    MetaData = models.TextField(max_length=256, blank = True)
    DataRecord = models.TextField(max_length=256, blank = True)
    DataPresentationRecord = models.TextField(max_length=256, blank = True)
    ApplicationPresentation = models.TextField(max_length=256, blank = True)
    EventPresentation = models.TextField(max_length=256, blank = True)
    MetaDataPresentation = models.TextField(max_length=256, blank = True)
    Transaction_status = models.CharField(max_length=256, blank = True)
    Transaction_id = models.TextField(max_length=256, blank = True)
    Session = models.SmallIntegerField(blank = True,null=True)
    Connection = models.IntegerField(blank = True,null=True)
    ServerName = models.CharField(max_length=256, blank = True)
    Port = models.SmallIntegerField(blank = True,null=True)
    SyncPort = models.TextField(max_length=256, blank = True)
    SessionDataSeparation = models.TextField(max_length=256, blank = True)
    SessionDataSeparationPresentation = models.TextField(max_length=256, blank = True)
    User = models.CharField(max_length=256, blank = True)
    UidUse = models.CharField(max_length=256, blank = True)
    UserName = models.CharField(max_length=256, blank = True)

    class Meta:
        verbose_name = ("Tjournal")
        verbose_name_plural = ("Tjournals")
        ordering = ("DataBase",)

    def __str__(self):
        return self.Event


-----------------------------------------------------------------------------



        class Tjournal(Document):
    DataBase = Keyword()
    LevelRecord =Keyword()
    DateRecord = Date()
    Application = Keyword()
    Computer = Text(analyzer='russian')
    Event = Text(analyzer='russian')
    Comment = Text(analyzer='russian')
    MetaData = Text(analyzer='russian')
    DataRecord = Text(analyzer='russian')
    DataPresentationRecord = Text(analyzer='russian')
    ApplicationPresentation = Text(analyzer='russian')
    EventPresentation = Text(analyzer='russian')
    MetaDataPresentation = Text(analyzer='russian')
    Transaction_status = Keyword()
    Transaction_id = Text()
    Session = Short()
    Connection = Integer()
    ServerName = Keyword()
    Port = Short()
    SyncPort = Text()
    SessionDataSeparation = Text()
    SessionDataSeparationPresentation = Text()
    User = Keyword()
    UidUse = Keyword()
    UserName = Keyword()
    
    class Index:
        name = 'tjournal'
        settings = {
          "number_of_shards": 1,
        }

    def save(self, ** kwargs):
        self.lines = len(self.body.split())
        return super(Tjournal, self).save(** kwargs)

------------------------------------------------------------------------------

        class TjournalSerializer(serializers.HyperlinkedModelSerializer):
    class Meta:
        model = Tjournal
        fields = [
            'DataBase', 
            'LevelRecord',
            'DateRecord',
            'Application' ,
            'Computer' ,
            'Event',
            'Comment' ,
            'MetaData' ,
            'DataRecord' ,
            'DataPresentationRecord' ,
            'ApplicationPresentation' ,
            'EventPresentation' ,
            'MetaDataPresentation' ,
            'Transaction_status' ,
            'Transaction_id',
            'Session' ,
            'Connection' ,
            'ServerName',
            'Port',
            'SyncPort',
            'SessionDataSeparation', 
            'SessionDataSeparationPresentation' ,
            'User' ,
            'UidUse' ,
            'UserName' 
            ]